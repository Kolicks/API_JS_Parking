[
    {
        "id": "951b9c4c3a217adc",
        "type": "tab",
        "label": "Principal",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "343a807845bd6bc4",
        "type": "tab",
        "label": "Proves",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "c032c0587406e398",
        "type": "telegram bot",
        "botname": "Draginos_Hello_bot",
        "usernames": "",
        "chatids": "941132465,1358469762,-649296243",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": true
    },
    {
        "id": "9ded7cec3dd46546",
        "type": "telegram bot",
        "botname": "LoRa_UdG_Infobot",
        "usernames": "",
        "chatids": "941132465",
        "baseapiurl": "",
        "updatemode": "polling",
        "pollinterval": "300",
        "usesocks": false,
        "sockshost": "",
        "socksport": "6667",
        "socksusername": "anonymous",
        "sockspassword": "",
        "bothost": "",
        "botpath": "",
        "localbotport": "8443",
        "publicbotport": "8443",
        "privatekey": "",
        "certificate": "",
        "useselfsignedcertificate": false,
        "sslterminated": false,
        "verboselogging": false
    },
    {
        "id": "73580a069c7f19f0",
        "type": "mqtt-broker",
        "name": "UdG_Politècnica",
        "broker": "eu1.cloud.thethings.network",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "06a7b0da5c939950",
        "type": "mqtt-broker",
        "name": "Arduino",
        "broker": "eu1.cloud.thethings.network",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "373fa459.54e07c",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "WEATHER",
        "name": "Weather",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x"
    },
    {
        "id": "5c3a4e27.a99f9",
        "type": "mqtt-broker",
        "name": "",
        "broker": "192.168.0.203",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "willTopic": "",
        "willQos": "0",
        "willPayload": ""
    },
    {
        "id": "a2065bd96446be27",
        "type": "influxdb",
        "hostname": "localhost",
        "port": "8086",
        "protocol": "http",
        "database": "Sensor_Cotxe",
        "name": "Sensor_Cotxe",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "e53c3f071674405c",
        "type": "mqtt in",
        "z": "951b9c4c3a217adc",
        "name": "Sensor_Cotxe",
        "topic": "v3/proves-cotxe@ttn/devices/eui-ffffff1000027d34/up",
        "qos": "1",
        "datatype": "json",
        "broker": "73580a069c7f19f0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 240,
        "wires": [
            [
                "cfdcb6ccad1d8e35",
                "ace8ecd28e23cf84"
            ]
        ]
    },
    {
        "id": "cfdcb6ccad1d8e35",
        "type": "function",
        "z": "951b9c4c3a217adc",
        "name": "Funció JSON",
        "func": "//Decodificar\np=msg.payload;\nnode.log(typeof p);\nmsg.payload = p.uplink_message.decoded_payload;\n\n\n    //Lògica\n    var missatge;\n    if (msg.payload.Frame_type == 7){\n        //Calibració\n        msg.payload.missatge = \"Calibració completa\";\n        return [msg,null]; \n    }\n    else if (msg.payload.Frame_type == 8){\n        //Alive\n        msg.payload.missatge = \"Alive Sensor\";\n        return [msg,null]; \n    }\n    else if (msg.payload.Frame_type == 9){\n        //Error\n        msg.payload.missatge = \"Error Sensor\";\n        return [msg,null]; \n    }\n    else if (msg.payload.Frame_type == 10){\n        //Guardem a la DB\n        return [null,msg]; \n    }",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 240,
        "wires": [
            [
                "f836ef89c3a37f41"
            ],
            [
                "aa0e47004189e7fd",
                "cf4e13153a987bc0"
            ]
        ]
    },
    {
        "id": "1e0b40bb4581c1f0",
        "type": "delay",
        "z": "951b9c4c3a217adc",
        "name": "",
        "pauseType": "delay",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 940,
        "y": 160,
        "wires": [
            [
                "e4ee15521db208f0"
            ]
        ]
    },
    {
        "id": "24ef9b5b7caf84db",
        "type": "function",
        "z": "951b9c4c3a217adc",
        "name": "Codificador_Downlink",
        "func": "return {\n  \"payload\": {\n    \"downlinks\": [{\n      \"f_port\": 1,\n      \"frm_payload\": msg.payload.toString(\"base64\"),\n      \"priority\": \"NORMAL\"\n    }]\n  }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 240,
        "wires": [
            [
                "36d9548fcd569ec6",
                "ed083e5943cbb079"
            ]
        ]
    },
    {
        "id": "ed083e5943cbb079",
        "type": "mqtt out",
        "z": "951b9c4c3a217adc",
        "name": "LED",
        "topic": "v3/proves-cotxe@ttn/devices/eui-70b3d57ed004da1c/down/push",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "73580a069c7f19f0",
        "x": 1610,
        "y": 240,
        "wires": []
    },
    {
        "id": "36d9548fcd569ec6",
        "type": "debug",
        "z": "951b9c4c3a217adc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 200,
        "wires": []
    },
    {
        "id": "615a200325b193e2",
        "type": "delay",
        "z": "951b9c4c3a217adc",
        "name": "",
        "pauseType": "delay",
        "timeout": "0",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "2",
        "rateUnits": "hour",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 940,
        "y": 300,
        "wires": [
            [
                "e343308d78bc12e8"
            ]
        ]
    },
    {
        "id": "e4ee15521db208f0",
        "type": "change",
        "z": "951b9c4c3a217adc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[1]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 160,
        "wires": [
            [
                "24ef9b5b7caf84db"
            ]
        ]
    },
    {
        "id": "e343308d78bc12e8",
        "type": "change",
        "z": "951b9c4c3a217adc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[0]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 300,
        "wires": [
            [
                "24ef9b5b7caf84db"
            ]
        ]
    },
    {
        "id": "aa0e47004189e7fd",
        "type": "influxdb out",
        "z": "951b9c4c3a217adc",
        "influxdb": "a2065bd96446be27",
        "name": "Parking_A",
        "measurement": "Parking_A",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 590,
        "y": 320,
        "wires": []
    },
    {
        "id": "cba4abc6d302c1a4",
        "type": "mqtt in",
        "z": "951b9c4c3a217adc",
        "name": "Actuador_Led",
        "topic": "v3/proves-cotxe@ttn/devices/eui-70b3d57ed004da1c/up",
        "qos": "1",
        "datatype": "json",
        "broker": "73580a069c7f19f0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 480,
        "wires": [
            [
                "7da12ce2f95fddcd"
            ]
        ]
    },
    {
        "id": "7da12ce2f95fddcd",
        "type": "function",
        "z": "951b9c4c3a217adc",
        "name": "Decodificador JSON",
        "func": "p=msg.payload;\nnode.log(typeof p);\nmsg.payload = p.uplink_message.decoded_payload;\n\nif (msg.payload.LED >= 0){\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 480,
        "wires": [
            [
                "dbd8b6c4d712f134",
                "35df8a721609c123"
            ]
        ]
    },
    {
        "id": "dbd8b6c4d712f134",
        "type": "influxdb out",
        "z": "951b9c4c3a217adc",
        "influxdb": "a2065bd96446be27",
        "name": "LED",
        "measurement": "LED",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 690,
        "y": 480,
        "wires": [],
        "inputLabels": [
            "msg.Dades"
        ]
    },
    {
        "id": "d5599ff090ca71e1",
        "type": "change",
        "z": "951b9c4c3a217adc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "[1]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 220,
        "wires": [
            [
                "615a200325b193e2"
            ]
        ]
    },
    {
        "id": "483ed031fa615669",
        "type": "change",
        "z": "951b9c4c3a217adc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "[1]",
                "tot": "bin"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 260,
        "wires": [
            [
                "1e0b40bb4581c1f0"
            ]
        ]
    },
    {
        "id": "f836ef89c3a37f41",
        "type": "debug",
        "z": "951b9c4c3a217adc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 160,
        "wires": []
    },
    {
        "id": "3ef6a62b55958140",
        "type": "telegram sender",
        "z": "951b9c4c3a217adc",
        "name": "LED",
        "bot": "9ded7cec3dd46546",
        "haserroroutput": false,
        "outputs": 1,
        "x": 970,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "646619908d2547e4",
        "type": "function",
        "z": "951b9c4c3a217adc",
        "name": "Telegram",
        "func": "if (msg.payload.LED == 0){\n    msg.payload={\n        \"chatId\":941132465,\n        \"type\":\"message\",\n        \"content\": \"Apagat\"\n    }\n}\nelse if (msg.payload.LED == 1){\n    msg.payload={\n        \"chatId\":941132465,\n        \"type\":\"message\",\n        \"content\": \"Encès\"\n    }\n}\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 540,
        "wires": [
            [
                "3ef6a62b55958140"
            ]
        ]
    },
    {
        "id": "35df8a721609c123",
        "type": "rbe",
        "z": "951b9c4c3a217adc",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.LED",
        "topi": "topic",
        "x": 630,
        "y": 540,
        "wires": [
            [
                "646619908d2547e4"
            ]
        ]
    },
    {
        "id": "805c7adf7b43d979",
        "type": "function",
        "z": "951b9c4c3a217adc",
        "name": "Selecció",
        "func": "//Lògica\nif (msg.payload.Parking_status == 1){\n    //Calibració\n    return [msg,null]; \n}\nelse if (msg.payload.Parking_status == 0){\n    //Alive\n    return [null,msg]; \n}",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 240,
        "wires": [
            [
                "d5599ff090ca71e1",
                "1e0b40bb4581c1f0"
            ],
            [
                "483ed031fa615669",
                "615a200325b193e2"
            ]
        ]
    },
    {
        "id": "cf4e13153a987bc0",
        "type": "rbe",
        "z": "951b9c4c3a217adc",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.Parking_status",
        "topi": "topic",
        "x": 450,
        "y": 240,
        "wires": [
            [
                "805c7adf7b43d979"
            ]
        ]
    },
    {
        "id": "ace8ecd28e23cf84",
        "type": "debug",
        "z": "951b9c4c3a217adc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 160,
        "wires": []
    },
    {
        "id": "f29d9b730c0037ec",
        "type": "inject",
        "z": "343a807845bd6bc4",
        "name": "Inici",
        "props": [],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 120,
        "wires": [
            [
                "de7f950c5de76589"
            ]
        ]
    },
    {
        "id": "de7f950c5de76589",
        "type": "influxdb in",
        "z": "343a807845bd6bc4",
        "influxdb": "a2065bd96446be27",
        "name": "Selecció",
        "query": "\nselect Parking_status from Parking_A ORDER BY time DESC LIMIT 2",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "organisation",
        "x": 560,
        "y": 120,
        "wires": [
            [
                "f49405557b90852e"
            ]
        ]
    },
    {
        "id": "f49405557b90852e",
        "type": "function",
        "z": "343a807845bd6bc4",
        "name": "",
        "func": "msg.payload={\n    \"Previ\":{\n        \"Data\":msg.payload[1].time,\n        \"Status\":msg.payload[1].Parking_status\n    },\n    \"Actual\":{\n        \"Data\":msg.payload[0].time,\n        \"Status\":msg.payload[0].Parking_status\n    }\n}\nif (msg.payload.Actual.Status==1){\n    //Restem temps\n    var timediff = 0\n    timediff = (msg.payload.Actual.Data) - (msg.payload.Previ.Data);\n    // Pasem a minuts\n    timediff= timediff/60000;\n    //Apliquem logica\n    if (timediff > 15){\n        msg.payload = {Diferència: timediff}\n        return msg\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "db1b822da9555c99",
        "type": "function",
        "z": "343a807845bd6bc4",
        "name": "Declaració",
        "func": "global.set(\"colum\",\"Parking_status\")",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "49081098925c7c7f",
        "type": "inject",
        "z": "343a807845bd6bc4",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 210,
        "y": 60,
        "wires": [
            [
                "db1b822da9555c99"
            ]
        ]
    }
]